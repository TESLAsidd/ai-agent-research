name: Deploy to Multiple Platforms

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # Test the application
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements_deploy.txt
    
    - name: Test application
      run: |
        python -c "import streamlit; print('Streamlit installed successfully')"
        python -c "from streamlit_app import main; print('App imports successfully')"

  # Build and push Docker image
  docker:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: |
          ghcr.io/${{ github.repository_owner }}/ai-research-agent:latest
          ghcr.io/${{ github.repository_owner }}/ai-research-agent:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  # Deploy to staging (for testing)
  deploy-staging:
    needs: [test, docker]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Deploy to staging
      run: |
        echo "üöÄ Application tested and ready for deployment!"
        echo "üì¶ Docker image available at: ghcr.io/${{ github.repository_owner }}/ai-research-agent:latest"
        echo "üåê Ready for Streamlit Cloud deployment"